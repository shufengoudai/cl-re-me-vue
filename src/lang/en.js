const en = {
    login: {
        title: "CRM System",
        userName: "Username",
        userNameMsg: "Please input username",
        pwd: "Password",
        pwdMsg: "Please input password",
        login: "Login",
        failed: "Username and password is mismatch"
    },
    index: {
        login: "Login",
        home: "Home",
        allProjects: "All projects",
        project: "Project",
        uploadImage: "Upload image display",
        tinymce: "tinymce text editor",
        uploadDemo: "Upload demo",
        userManage: "User Management",
        managementTeam: "Management group",
        adminManage: "Administrator management",
        roleManage: "Role management",
        PermissionManage: "authority management",
        adRelated: "Advertising related",
        adSiteManage: "Advertising slot management",
        adManage: "Advertising management",
        changePassword: "Change password",
        signOut: "Sign out",
        themeSwitch: "Theme switch",
        oldPassword: "Initial password",
        newPassword: "New password",
        confirmPassword: "Confirm the new password",
        cancel: "cancel",
        commit: "commit",
        password: "Please input the password",
        passwordAgain: "Please input the new password again",
        passwordCheckMsg: "Two new passwords are inconsistent",
        oldPasswordMsg: "Please input the Initial password",
        newPasswordMsg: "Please input new password",
        exitSystemMsg: "Are you sure exit the system?",
        hint: "Hint",
        continue: "Yes",
        notContinue: "No",
        changeSuccess: "Changed Successfully",
        changeError: "The initial password is incorrect",
        passwordSame: "The new password is the same as the initial password",
        requirement: "Sprint backlog",
        sprint: "Sprint",
        ideaLine: "Idea line",
        remainHours: "Remained hours",
        newTask: "New task",
        confirm: "confirm",
        enterpriseManagement: "Enterprise backstage",
        bug: "Bug",
        projectView: "Project View",
        bugNew: "BugNew"
    },
    menu:{
        item1:"message",
        item2:"contact person",
        item3:"company",
        item4:"project",
        item5:"activity"
    },
    main: {
        search: " Search project(Enter)",
        totalRocords: "Total records",
        add: "New",
        projectName: "Project name",
        projectIdentify: "Project identifier",
        memberNum: "Member",
        userFullName: "Creator",
        insDtTime: "Creation time",
        addProject: "New project",
        newProjectName: "Name",
        inputName: "Please input project name",
        identify: "Identifier",
        inputIdentify: "Enter project Identifier",
        projectStart: "Start time",
        selectProjectStart: "Please select start time",
        selectUsers: "Member",
        selectMembers: "Please select project members",
        projectEnd: "End time",
        selectProjectEnd: "Please select end time",
        projectDescriptionLabel: "Description",
        projectDescriptionPlaceholder: "Please input description",
        commit: "submit",
        cancel: "cancel",
        allMember: "All member",
        operateSuccess: "Operated Successfully",
        editProject: "Edit",
        deleteProject: "Delete",
        deleteSuccess: "Deleted Successfully",
        enterProjectName: "Please enter project name",
        enterProjectIdentify: "Please enter project Identifier",
        projectNameDuplicate: "Duplicate project name",
        identifyDuplicate: "Duplicate project Identifier",
        whetherDelPJ: "Confirm to delete this project",
    },
    task: {
        totalRocords: "Total records",
        headerSetTitle: "Header show field",
        headerSetLabel: ["Selectable field", "Selected field"],
        add: "New",
        updSprint: "Move to sprint",
        headerSetTitleBySprint: "Story",
        headerSetLabelBySprint: ["Selectable Story", "Selected Story"],
        story: "Story",
        task: "Task",
        selectedRocords: "Selected records",
        moveToSpring: "Move to sprint",
        moveToVersion: "Move to version",
        searchMember: "Search Member...",
        setOwner: "Owner",
        setStatus: "Change status",
        more: "More",
        copy: "Copy ",
        move: "Move",
        delete: "Delete",
        cancelSelect: "Deselect",
        taskCode: "Code",
        taskName: "Title",
        taskStatus: "status",
        create: "Not started",
        running: "Processing",
        finish: "　Finished",
        disuse: "　 Discard",
        ownerName: "Owner",
        insDtTime: "Creation time",
        taskSprint: "Sprint",
        taskPriority: "Priority",
        taskStart: "Start time",
        taskEnd: "End time",
        taskType: "Task type",
        allMember: "All members",
        updateSuccess: "Updated Successfully",
        deleteSuccess: "Deleted Successfully",
        taskProject: "Task project",
        selectTaskOwner: "Select task owner",
        inputTitle: "Input task title",
        selectTaskStart: "Select start time",
        taskStory: "Story",
        selectTaskStory: "Select task's story",
        selectTaskPriority: "Select task's priority",
        selectTaskEnd: "Select end time",
        selectTaskType: "Select task's type",
        taskDescription: "Description",
        inputDescription: "Input description",
        commit: "commit",
        cancel: "cancel",
        taskInformation: "Basic information",
        annex: "files",
        taskComment: "Comment",
        operateSuccess: "Operated Successfully",
        inputTitleMsg: "Please input task title",
        newStory: "New story",
        newTask: "New task",
        hours: "Work hours",
        inputTaskStory: "Please input story",
        inputTaskComment: "Post comments (Ctrl+Enter)",
        storyPointCheck: "Please enter a positive integer",
        whetherDelStoryOrTask: "Confirm to delete Story or Task?"
    },
    taskKanban: {
        notStart: "Not started",
        running: "Processing",
        finish: "Finished",
        disuse: "Discard",
        remainHours: "Remained hours  "
    },
    story: {
        search: "Search story(Enter)",
        totalRocords: "Total records",
        headerSetTitle: "Header show field",
        headerSetLabel: ["Selectable field", "Selected field"],
        add: "New",
        feature: "Feature",
        story: "Story",
        task: "Task",
        batchAdd: "Batch",
        selectedRocords: "Selected records",
        moveToSpring: "Move to sprint",
        moveToVersion: "Move to version",
        searchMember: "Search Member...",
        searchSprint: "Search Sprint...",
        setOwner: "Owner",
        setStatus: "Change status",
        more: "More",
        copy: "Copy ",
        move: "Move",
        file: "File",
        delete: "Delete",
        cancelSelect: "Deselect",
        storyCode: "ID",
        storyTitle: "Title",
        title: "Title",
        storyStatus: "Status",
        create: "Not started",
        running: "Processing",
        finish: "　Finished",
        disuse: "　 Discard",
        ownerName: "Owner",
        storyPoint: "Story point",
        insDtTime: "Creation time",
        sprintName: "Sprint",
        storySprint: "The story sprint",
        storyPriority: "Priority",
        storyStart: "Start time",
        storyEnd: "End time",
        requirementType: "Type",
        requirementOrigin: "Origin",
        allMember: "All members",
        allSpring: "All springs",
        updateSuccess: "Updated Successfully",
        deleteSuccess: "Deeleted Successfully",
        storyProject: "Project",
        selectStoryOwner: "Select story's owner",
        inputTitle: "Input story title",
        selectStoryStart: "Select start time",
        selectRequirementType: "Select requirement type",
        selectStoryPriority: "Select story's priority",
        point: "Point",
        inputPoint: "Input story point",
        selectStoryEnd: "Select end time",
        selectRequirementOrigin: "Select requirement origin",
        storyReady: "S Condition",
        inputStoryReady: "Input start condition",
        priorityAdjustment: "Priority adjustment",
        endCondition: "F Condition",
        inputStoryEnd: "Input finish condition",
        storyDescription: "Description",
        inputDescription: "Input description",
        commit: "commit",
        cancel: "cancel",
        storyInformation: "Basic Information",
        annex: "files",
        storyComment: "Comment",
        operateSuccess: "Operated Successfully",
        inputTitleMsg: "Please input story title",
        newFeature: "New feature",
        newStory: "New story",
        inputStoryComment: "Post comments (Ctrl+Enter)",
        index: "Index",
        send: "send",
        storyCount: "storyCount:",
        pointCount: "pointCount:",
        storyPonitActual: "actual point",
        storyBusinessValue: "business value",
        whetherDelStory: "Confirm to delete Story?"
    },
    sprint: {
        search: "Search sprint(Enter)",
        addSprint: "New sprint",
        totalRocords: "Total records",
        sprintName: "Name",
        sprintStatus: "Status",
        create: "Not started",
        running: "Processing",
        finish: "　Finished",
        sprintProgress: "Sprint progress",
        sprintOwner: "Owner",
        sprintPeriod: "Sprint period",
        startSprint: "Start sprint",
        endSprint: "End sprint",
        viewTask: "Enter Sprint backlog",
        goTaskBoard: "Enter Task Board",
        goReviewBoard: "Enter Review Board",
        editSprint: "Edit sprint",
        deleteSprint: "Delete sprint",
        sprintNameLabel: "Title",
        sprintNamePlaceholder: "Input sprint title",
        sprintNameRequiredMsg: "Please input sprint title",
        sprintProjectLabel: "Project",
        sprintProjectRequiredMsg: "Please select sprint's project",
        sprintProjectPlaceholder: "select sprint's project",
        sprintOwnerLabel: "Owner",
        sprintOwnerRequiredMsg: "Please select product owner",
        sprintOwnerPlaceholder: "select product owner",
        sprintStartLabel: "Start time",
        sprintStartRequiredMsg: "Please select start time",
        sprintStartPlaceholder: "Select start time",
        sprintEndLabel: "End time",
        sprintEndRequiredMsg: "Please select end time",
        sprintEndPlaceholder: "select end time",
        sprintDescriptionLabel: "Sprint Aims",
        sprintDescriptionPlaceholder: "Input sprint aims",
        cancel: "Cancel",
        confirm: "Confirm",
        operateSuccess: "Operated Successfully",
        startSuccess: "Started Successfully ",
        endSuccess: "Ended Successfully",
        deleteSuccess: "deleted Successfully",
        sprintList: "Sprint list",
        overview: "Overview",
        workItem: "Sprint backlog",
        taskBoard: "Task board",
        review: "Review board",
        whetherDelSprint: "Confirm to delete this Sprint?"
    },
    sprintBasic: {
        sprint: "Sprint",
        sprintStatus: "Status",
        sprintOwner: "Owner",
        sprintCycle: "Cycle",
        remainDays: "Remained days",
        day: " days",
        sprintProgress: "Progress",
        totalWorkHours: "Total working hours",
        hoursSpent: "Spent working hours",
        remainHours: "Remained working hours",
        storyPoint: "Story point",
    },
    sprintKpt: {
        veryGood: "Keep",
        ordinary: "Genaral",
        improvementPlan: "Improvement plan",
        operateSuccess: "Operated Successfully"
    },
    workTime: {
        updateSuccess: "Updated Successfully",
        dataLogin: "Registration Successded",
        loginMsg: "Data has already been registered",
        deleteSuccess: "Deleted Successfully",
        totalEstimateTime: "Estimated",
        totalRegisterTime: "Registered",
        remain: "Remained",
        registerWorkTime: "Register",
        registerWorkHour: "Work hours",
        remainWorkTime: "Remained",
        workTime: "Working hours",
        description: "Description",
        type: "Type",
        register: "Registrant",
        date: "Date",
        operation: "Operation",
        hour: "Hours",
        selectDate: "Date",
        consumeHour: "consumed",
        remainHour: "Remained",
        cancel: "Cancel",
        commit: "Commit",
        estimateTime: "Estimate hours",
        confirm: "Confirm",
        updateHour: "Update",
        deleteHour: "Deletion",
        message1: "Are you sure delete ",
        message2: "  ",
        message3: "h's data?",
        dateCheck: "Enter regist date please",
        MsgSprintPeriod: "Please set the sprint period",
        dateRangCheck: "Please reselect the date"
    },
    language: {
        language: "Language",
        languageZh: "Chinese",
        languageEn: "English",
        languageJa: "Japanese"
    },
    company: {
        addUser: "New user",
        newAdministrator: "New Enterprise Administrator",
        userName: "Account",
        administrator: "Account",
        administratorName: "Name",
        userFullName: "Name",
        position: "Position",
        email: "Email",
        phoneNumber: "Tel number",
        depart: "Department",
        operate: "Operation",
        sex: "Sex",
        authority: "Authority",
        initialPassword: "Initial password",
        cancel: "cancel",
        commit: "commit",
        disableUser: "Disable user",
        disableUserMessage: "Are you sure to disable this member?",
        setPassword: "Set member password",
        changePassword: "Change password",
        userNameCheck: "Please input user name",
        userFullnameCheck: "Please input name",
        passwordCheck: "Please input initial password",
        authorityCheck: "Please input authority",
        insertUser: "Insert user",
        updateUser: "Update user",
        addCompany: "New company",
        companyName: "Company name",
        createAccount: "Create account",
        update: "Update",
        delete: "Delete",
        modifyCompany: "Modify company name",
        deleteCompany: "Delete company",
        companyNameCheck: "Please input company name",
        operateSuccess: "Operated Successfully",
        returnCompany: "Return company",
        companyManagement: "Company Management",
        userManagement: "User Management",
        payManagement: "Pay Management",
        safeManagement: "Safe Management",
        enterpriseOverview: "Enterprise Overview",
        userOverview: "User Overview",
        roleManagement: "Department List",
        positionManagement: "Position List",
        userNameDuplicate: "Duplicate company identifier or user name",
        userTelError: "Mobile phone number format is incorrect",
        userMailError: "E-mail format is incorrect",
        companyIdentifier: "company identifier",
        enterCompanyIdentifier: "Please input company identifier",
        whetherDelCompany: "Confirm to delete this company?"
    },
    common: {
        operateFailed: "Operation failed",
        operateSuccess: "Operation succeed",
        noData: "No data",
        cancel: "Cancel",
        confirm: "Confirm",
        commit: "Commit",
        prompt: "Prompt",
        updateSuccess: "Updated Successfully",
    },
    file: {
        fileTooLarge: "File size is too large",
        fileUploadFailed: "File upload failed",
        fileUploadError: "File upload error",
        fileSize: "The maximum file size is only 100M, which is out of range now",
        fileSuccess: "File upload successfully",
        fileDeleteSuccess: "File deleted successfully",
        fileDeleteFailed: "File deletion failed",
        fileRename: "Rename",
        fileName: "name",
        fileNameCheck: "Please enter the file name",
        modifyFailed: "File name modification failed",
        modifySuccess: "File name modified successfully",
        downloadFailed: "File download failed",
        downloadError: "File download error",
        total: "total",
        annexFile: "files",
        addFile: "Add files",
        fromMember: "from",
        view: "Preview",
        download: "download",
        delete: "delete",
    },
    authRole: {
        name: "Role name",
        remark: "Description",
        operate: "Operate",
        update: "Update",
        delete: "Delete",
        addAuthRole: "Add authRole",
        pid: "pid",
        status: "State",
        listorder: "Sort",
        cancel: "Cancel",
        commit: "Commit",
        numCheck: "Enter number please",
        pidCheck: "Enter pid please",
        statusCheck: "Enter status please",
        listOrderCheck: "Enter listOrder please",
        nameCheck: "Enter role name please",
        remarkCheck: "Enter description of the role please"
    },
    workTimeOverView: {
        totalEstimateHour: "Estimate",
        totalRegistHour: "Registed",
        totalRegistCount: "Registed count",
        hour: "Hour",
        count: "Times",
        member: "Member",
        other: "Other",
        estimate: "Estimate Hour(H)",
        regist: "Regist Hour(H)",
        taskName: "Task　title"
    },
    bug: {
        totalRocords: "Total records",
        headerSetTitle: "Header show field",
        headerSetLabel: ["Selectable field", "Selected field"],
        bugCode: "Bug Code",
        bugTitle: "Bug Title",
        bugStatus: "Bug Status",
        bugOwnerName: "Bug Owner",
        bugRecurrenceProbabilityName: "Bug Recurrence Probability",
        insDtTime: "Create Time",
        bugEnd: "End Date",
        insAccountId: "Create User",
        updDtTime: "Update Time",
        updAccountId: "Update User",
        bugPriorityName: "Bug Priority",
        bugTabName: "Bug Tab",
        bugTypeName: "Bug Type",
        bugCauseAnalysisName: "Bug Cause",
        bugSprintName: "Sprint",
        bugPoint: "Bug Point",
        selectedRocords: "Selected Rocords",
        moveToSpring: "Move To Spring",
        moveToVersion: "Move To Version",
        searchMember: "Search Member...",
        allMember: "AllMember",
        setOwner: "Set Owner",
        setStatus: "Set Status",
        more: "More",
        copy: "Copy",
        move: "Move",
        file: "File",
        delete: "Delete",
        cancelSelect: "CancelSelect",
        addBug: "Add Bug",
        cancel: "cancel",
        confirm: "Confirm",
        bugProjectNmae: "Project",
        bugDescription: "Description",
        inputTitleMsg: "Please enter title",
        create: "Create",
        deal: "Processing",
        fixed: "Fixed",
        reopen: "Reopen",
        suspend: "Suspend",
        released: "Released",
        rejected: "Rejected",
        bugInformation: "Infomation",
        bugComment: "Comment",
        bugSprint: "Sprint",
        bugRegistHour: "Regist Hour",
        bugStep: "Bug Step",
        noBug: "Not Bug",
        bugUpload: "Files",
        bugUploadClick: "Click to upload",
        whetherDelBug: "Confirm to delete the Bug?",
        bugProjectName: "Project Name",
        bugFixerName: "Fixer Name",
        bugRelatedPersonName: "RelativePersonName",
        bugFoundProcessName: "Found Process",
        bugStoryName: "relative story",
        bugTestTimes: "TestTimes",
        bugFoundVersion: "Found Version",
        bugFoundFunction: "Found Function",
        bugDivisionName: "Division Name",
        bugCausedSprintName: "Caused Sprint",
        bugCausedProcessName: "Caused Process",
        bugCausedStoryName: "Caused Story",
        inputOwnerMsg: "Please enter Owner",
        inputPriorityMsg: "Please enter Priority",
        inputBugEndMsg: "Please enter BugEnd",
        inputBugFixerMsg: "Please enter BugFixer",
        bugFixMethod: "Fix Method"
    },
    bugTime: {
        hourRegist: "Registered Hour",
        hourRemain: "Remained Hour",
        hourRegistAccount: "Regist Account",
        statisticsDate: "Date",
        operation: "operation",
        totalEstimateTime: "Estimate",
        totalRegisterTime: "Registered",
        hour: "hour",
        remain: "remained",
        registerBugTime: "Register",
        updateSuccess: "update Success",
        selectDate: "Date",
        consumeHour: "consumed",
        remainHour: "remain",
        cancel: "cancel",
        commit: "commit",
        dateCheck: "Enter date please",
        dataLogin: "login success",
        updateHour: "update Hour",
        hourRegistCheck: "Enter regist hour please",
        hourRemainCheck: "Enter remain hour please",
        deleteHour: "deleteHour",
        message1: "Are you sure delete ",
        message2: "  ",
        message3: "h's data?",
        deleteSuccess: "deleteSuccess",
        confirm: "confirm"
    },
    projectChart:{
        point: "point",
        pointRemian: "pointRemian",
        sprintName: "sprint",
        sprintStatusName: "sprint Status",
        storyPoint: "Point",
        storyPointRemain: "Point Remain",
        period: "period",
        totalBugCount: "Bug Count",
        bugUncompleteCount: "BugCount(Unresolved)",
        totalKptCount: "Items improved",
        kptUncompleteCount: "Improvement items"
    },
    notification: {
        title: "Notice",
        newNotice: "New Notice",
        laterDo: "Do Later",
        setting: "Setting",
        allSetting: "All Notice"
    },
    error: {
        backHomepage: "Back to Homepage",
        lastPage: "Go back to the last page",
    },
    comment: {
        title: "Comment"
    }
};

export default en;
